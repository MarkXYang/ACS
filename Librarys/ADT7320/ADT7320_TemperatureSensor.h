/*
 * ADT7320_TemperatureSensor.h
 *
 * Created: 12/02/2014 4:16:06 PM
 *  Author: Cass
 */ 


#ifndef ADT7320_TEMPERATURESENSOR_H_
#define ADT7320_TEMPERATURESENSOR_H_

#include "config.h"

//Register addresses
#define ADT7320_STATUS_ADDR 0
#define ADT7320_CONFIGURATION_ADDR 1
#define ADT7320_TEMPERATURE_VALUE_ADDR 2
#define ADT7320_ID_ADDR 3
#define ADT7320_TCRIT_ADDR 4
#define ADT7320_THYST_ADDR 5
#define ADT7320_THIGH_ADDR 6
#define ADT7320_TLOW_ADDR 7;
//Command Byte fields
#define ADT7320_RW_offset 6
#define ADT7320_ADDR_offset 3

#define ADT7320_RW_mask (1 << ADT7320_RW_offset)
#define ADT7320_ADDR_mask (3 << ADT7320_ADDR_offset)

//Status Register
#define ADT7320_STATUS_TLOW_offset 4
#define ADT7320_STATUS_THIGH_offset 5
#define ADT7320_STATUS_TCRIT_offset 6
#define ADT7320_STATUS_RDY_offset 7

#define ADT7320_STATUS_TLOW_mask (1 << ADT7320_STATUS_TLOW_offset)
#define ADT7320_STATUS_THIGH_mask (1 << ADT7320_STATUS_THIGH_offset)
#define ADT7320_STATUS_TCRIT_mask (1 << ADT7320_STATUS_TCRIT_offset)
#define ADT7320_STATUS_RDY_mask (1 << ADT7320_STATUS_RDY_offset)

//Configuration Register
#define ADT7320_CONFIGURATION_FAULTQUEUE_offset 0
#define ADT7320_CONFIGURATION_CTPOLARITY_offset 2
#define ADT7320_CONFIGURATION_INTPOLARITY_offset 3
#define ADT7320_CONFIGURATION_INTCTMODE_offset 4
#define ADT7320_CONFIGURATION_OPERATIONMODE_offset 5
#define ADT7320_CONFIGURATION_RESOLUTION_offset 7

#define ADT7320_CONFIGURATION_FAULTQUEUE_mask (3 << ADT7320_CONFIGURATION_FAULTQUEUE_offset)
#define ADT7320_CONFIGURATION_CTPOLARITY_mask (1 << ADT7320_CONFIGURATION_CTPOLARITY_offset)
#define ADT7320_CONFIGURATION_INTPOLARITY_mask (1 << ADT7320_CONFIGURATION_INTPOLARITY_offset)
#define ADT7320_CONFIGURATION_INTCTMODE_mask (1 << ADT7320_CONFIGURATION_INTCTMODE_offset)
#define ADT7320_CONFIGURATION_OPERATIONMODE_mask (3 << ADT7320_CONFIGURATION_OPERATIONMODE_offset)
#define ADT7320_CONFIGURATION_RESOLUTION_mask (1 << ADT7320_CONFIGURATION_RESOLUTION_offset)

//Temperature Value Register
//-----13 bit mode
#define ADT7320_TEMPERATURE_VALUE_TLOWFLAG_13_offset 0
#define ADT7320_TEMPERATURE_VALUE_THIGHFLAG_13_offset 1
#define ADT7320_TEMPERATURE_VALUE_TCRITFLAG_13_offset 2
#define ADT7320_TEMPERATURE_VALUE_TEMP_13_offset 3
#define ADT7320_TEMPERATURE_VALUE_SIGN_13_offset 15

#define ADT7320_TEMPERATURE_VALUE_TLOWFLAG_13_mask (1 << ADT7320_TEMPERATURE_VALUE_TLOWFLAG_13_offset)
#define ADT7320_TEMPERATURE_VALUE_THIGHFLAG_13_mask (1 << ADT7320_TEMPERATURE_VALUE_THIGHFLAG_13_offset)
#define ADT7320_TEMPERATURE_VALUE_TCRITFLAG_13_mask (1 << ADT7320_TEMPERATURE_VALUE_TCRITFLAG_13_offset)
#define ADT7320_TEMPERATURE_VALUE_TEMP_13_mask (0xFFF << ADT7320_TEMPERATURE_VALUE_TEMP_13_offset)
#define ADT7320_TEMPERATURE_VALUE_SIGN_13_mask (1 << ADT7320_TEMPERATURE_VALUE_SIGN_13_offset)

//----- 16 bit mode
#define ADT7320_TEMPERATURE_VALUE_TEMP_16_offset 0
#define ADT7320_TEMPERATURE_VALUE_SIGN_16_offset 15

#define ADT7320_TEMPERATURE_VALUE_TEMP_16_mask (0xFFF << ADT7320_TEMPERATURE_VALUE_TEMP_16_offset)
#define ADT7320_TEMPERATURE_VALUE_SIGN_16_mask (1 << ADT7320_TEMPERATURE_VALUE_SIGN_16_offset)

//ID Register
#define ADT7320_ID_REV_offset 0
#define ADT7320_ID_MAN_offset 3

#define ADT7320_ID_REV_mask (7 << ADT7320_ID_REV_offset)
#define ADT7320_ID_MAN_mask (0x1F << ADT7320_ID_MAN_offset)

//T Crit Set point Register
#define ADT7320_TCRIT_SETPOINT_Value_offset 0

#define ADT7320_TCRIT_SETPOINT_Value_mask (0xFFFF << ADT7320_TCRIT_SETPOINT_Value_offset)

//T Hyst Set point Register
#define ADT7320_THYST_SETPOINT_Value_offset 0

#define ADT7320_THYST_SETPOINT_Value_mask (0xF << ADT7320_THYST_SETPOINT_Value_offset)

//T High Set point Register
#define ADT7320_THIGH_SETPOINT_Value_offset 0

#define ADT7320_THIGH_SETPOINT_Value_mask (0xFFFF << ADT7320_THIGH_SETPOINT_Value_offset)

//T Low Set point Register
#define ADT7320_TLOW_SETPOINT_Value_offset 0

#define ADT7320_TLOW_SETPOINT_Value_mask (0xFFFF << ADT7320_TLOW_SETPOINT_Value_offset)


//SPI function redefines, these just make it easier for this code to be used in different firmware using a different SPI library
U8 ADT7320_SEND(char ch);
U8 ADT7320_GET(void);
U8 ADT7320_READ_STATUS(void);
U8 ADT7320_READ_CONFIGURATION(void);
void ADT7320_WRITE_CONFIGURATION(U8 configuration);
U32 ADT7320_READ_TEMPERATURE(void);

#endif /* ADT7320_TEMPERATURESENSOR_H_ */